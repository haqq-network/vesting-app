{"mappings":"ulBAAA,IAAAA,EAAAC,EAAA,S,mEAMO,SAASC,IACd,MAAMC,MAAEA,IAAUC,mBACZC,cAAEA,IAAkBC,qBAE1B,OAAKH,GAKH,EAAAH,EAAAO,KAAC,MAAD,CAAKC,UAAU,mC,UACXL,iBAAOM,cAGP,EAAAT,EAAAO,KAACG,EAAD,CAA0BC,QAASN,KAFnC,EAAAL,EAAAO,KAACK,EAAD,MANG,I,CAgBJ,SAASC,GAAuBF,QAAEA,IACvC,MAAMR,MAAEA,IAAUC,kBAElB,OACE,EAAAJ,EAAAc,MAAC,MAAD,CAAKN,UAAU,uC,WACb,EAAAR,EAAAO,KAAC,SAAD,CACEC,WAAWO,aACT,uBACAJ,EAAU,kCAAoC,kBAEhDA,QAASA,E,UAET,EAAAX,EAAAO,KAAC,MAAD,CACES,MAAM,6BACNR,UAAU,gBACVS,KAAK,OACLC,QAAQ,YACRC,OAAO,eACPC,YAAa,EACbT,QAASA,E,UAET,EAAAX,EAAAO,KAAC,OAAD,CACEc,cAAc,QACdC,eAAe,QACfC,UAAU,kBACVC,EAAE,uDAIR,EAAAxB,EAAAO,KAAC,MAAD,CACEC,WAAWO,aACT,yDACA,mDACA,mCACA,yFACA,sF,UAGF,EAAAf,EAAAc,MAAC,MAAD,C,UAAR,qBAC2B,EAAAd,EAAAO,KAAC,IAAD,C,SAAIJ,iBAAOsB,OAAS,W,CAOxC,SAASC,GAAyBf,QACvCA,IAIA,MAAMR,MAAEA,IAAUC,kBAElB,OACE,EAAAJ,EAAAc,MAAC,MAAD,CAAKN,UAAU,sB,WACb,EAAAR,EAAAO,KAAC,SAAD,CACEC,WAAWO,aACT,sBACAJ,EAAU,kCAAoC,kBAEhDA,QAASA,E,UAET,EAAAX,EAAAO,KAAC,MAAD,CACES,MAAM,6BACNR,UAAU,gBACVS,KAAK,OACLC,QAAQ,YACRC,OAAO,eACPC,YAAa,E,UAEb,EAAApB,EAAAO,KAAC,OAAD,CACEc,cAAc,QACdC,eAAe,QACfE,EAAE,8EAKR,EAAAxB,EAAAO,KAAC,MAAD,CACEC,WAAWO,aACT,yDACA,mDACA,mCACA,yFACA,qF,UAGF,EAAAf,EAAAc,MAAC,MAAD,C,UAAR,YACkB,EAAAd,EAAAO,KAAC,IAAD,C,UAAIJ,iBAAOwB,MAAMC,cAASzB,EAAMwB,MAAQ,sBAChD,EAAA3B,EAAAO,KAAC,KAAD,IAAV,+C","sources":["src/components/NetworkStatus.tsx"],"sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { hexValue } from 'ethers/lib/utils';\nimport { useNetwork } from 'wagmi';\nimport { useOnboarding } from '../OnboardingContainer';\n\nexport function NetworkButton() {\n  const { chain } = useNetwork();\n  const { switchNetwork } = useOnboarding();\n\n  if (!chain) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex items-center justify-center\">\n      {!chain?.unsupported ? (\n        <SupportedNetworkStatus />\n      ) : (\n        <UnsupportedNetworkStatus onClick={switchNetwork} />\n      )}\n    </div>\n  );\n}\n\nexport { NetworkButton as default };\n\nexport function SupportedNetworkStatus({ onClick }: { onClick?: () => void }) {\n  const { chain } = useNetwork();\n\n  return (\n    <div className=\"group relative flex overflow-visible\">\n      <button\n        className={clsx(\n          'text-primary h-6 w-6',\n          onClick ? 'cursor-pointer hover:opacity-80' : 'cursor-default',\n        )}\n        onClick={onClick}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"w-full h-full\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          strokeWidth={2}\n          onClick={onClick}\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            transform=\"translate(0, 1)\"\n            d=\"M9 12l2 2 4-5m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n      </button>\n      <div\n        className={clsx(\n          'invisible absolute w-max mt-1 opacity-0 cursor-default',\n          'left-1/2 -translate-x-1/2 translate-y-2 top-full',\n          'transition ease-out duration-100',\n          'group-hover:visible group-hover:z-50 group-hover:opacity-100 group-hover:translate-y-0',\n          'py-[6px] px-[12px] rounded-md bg-primary shadow-xl text-white text-xs leading-snug',\n        )}\n      >\n        <div>\n          You connected to <b>{chain?.name}</b>.\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function UnsupportedNetworkStatus({\n  onClick,\n}: {\n  onClick?: () => void;\n}) {\n  const { chain } = useNetwork();\n\n  return (\n    <div className=\"group relative flex\">\n      <button\n        className={clsx(\n          'text-danger h-6 w-6',\n          onClick ? 'cursor-pointer hover:opacity-80' : 'cursor-default',\n        )}\n        onClick={onClick}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"w-full h-full\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          strokeWidth={2}\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n      </button>\n\n      <div\n        className={clsx(\n          'invisible absolute w-max mt-1 opacity-0 cursor-default',\n          'left-1/2 -translate-x-1/2 translate-y-2 top-full',\n          'transition ease-out duration-100',\n          'group-hover:visible group-hover:z-50 group-hover:opacity-100 group-hover:translate-y-0',\n          'py-[6px] px-[12px] rounded-md bg-danger shadow-xl text-white text-xs leading-snug',\n        )}\n      >\n        <div>\n          Network <b>{chain?.id && hexValue(chain.id)}</b> is not supported.\n          <br />\n          Click on this icon to switch network.\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["$21Wcl","parcelRequire","NetworkButton","chain","useNetwork","switchNetwork","useOnboarding","jsx","className","unsupported","$508df5ffa6a05cea$export$379c5dc39ed09a6f","onClick","$508df5ffa6a05cea$export$b0276ebdcd65915","SupportedNetworkStatus","jsxs","clsx","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","transform","d","name","UnsupportedNetworkStatus","id","hexValue"],"version":3,"file":"NetworkStatus.47254d93.js.map"}