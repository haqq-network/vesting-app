{"mappings":"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","sources":["src/components/DepositStatsWidget.tsx","HaqqVesting.json","src/components/Button.tsx","src/components/DepositNavigation.tsx"],"sourcesContent":["import { config } from '../config';\nimport React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useAccount, useContract, useProvider, useToken } from 'wagmi';\nimport { Card } from './Card';\nimport { Heading, Text } from './Typography';\nimport HaqqVestingContract from '../../HaqqVesting.json';\nimport { Spinner } from './Playground';\nimport { formatEther } from 'ethers/lib/utils';\nimport { Button } from './Button';\nimport { DepositNavigation } from './DepositNavigation';\n\nfunction mapSCResponseToJson(dep: any, available: any) {\n  // console.log({\n  //   one: dep[0].toString(),\n  //   two: dep[1].toString(),\n  //   three: dep[2].toString(),\n  //   available: formatEther(available),\n  //   deposited: formatEther(dep.sumInWeiDeposited),\n  // });\n\n  const deposited = dep.sumInWeiDeposited;\n  const withdrawn = dep.sumPaidAlready;\n  const unlocked = dep.sumPaidAlready.add(available);\n  const locked = deposited.sub(unlocked);\n\n  return {\n    locked,\n    unlocked,\n    available,\n    deposited,\n    withdrawn,\n    createdAt: new Date(dep.timestamp.toNumber() * 1000).toISOString(),\n  };\n}\n\nfunction StatsRow({ label, value }: { label: string; value: string }) {\n  return (\n    <div className=\"flex flex-row justify-between\">\n      <div>\n        <Text>{label}</Text>\n      </div>\n      <div>\n        <Text bold>{value}</Text>\n      </div>\n    </div>\n  );\n}\n\nexport function DepositStatsWidget() {\n  const provider = useProvider();\n  const { address, isConnected, isConnecting } = useAccount();\n  const contract = useContract({\n    addressOrName: config.contractAddress,\n    contractInterface: HaqqVestingContract.abi,\n    signerOrProvider: provider,\n  });\n  const [deposit, setDeposit] = useState<any>(null);\n  const [depositsCount, setDepositsCount] = useState<number>(0);\n  const [currentDeposit, setCurrentDeposit] = useState<number>(0);\n\n  const requestDepositCount = useCallback(async () => {\n    try {\n      const depositsCount = await contract.depositsCounter(address);\n\n      setDepositsCount(depositsCount.toNumber());\n    } catch (error) {\n      console.error(error);\n    }\n  }, [address, contract]);\n\n  const requestDepStats = useCallback(\n    async (address: string, depositNumber: number) => {\n      if (depositNumber > 0) {\n        try {\n          const deposit = await contract.deposits(address, depositNumber);\n          const amount = await contract.amountToWithdrawNow(\n            address,\n            depositNumber,\n          );\n\n          setDeposit(mapSCResponseToJson(deposit, amount));\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    },\n    [contract],\n  );\n\n  useEffect(() => {\n    requestDepositCount();\n  }, [address, contract, requestDepositCount]);\n\n  useEffect(() => {\n    if (depositsCount > 0) {\n      setCurrentDeposit(1);\n    }\n  }, [depositsCount]);\n\n  useEffect(() => {\n    if (depositsCount === 0) {\n      setCurrentDeposit(0);\n      setDeposit(null);\n    } else if (depositsCount > 0 && currentDeposit > 0 && address) {\n      requestDepStats(address, currentDeposit);\n    }\n  }, [address, currentDeposit, depositsCount, requestDepStats]);\n\n  // TODO: get it right\n  const symbol = 'ISLM';\n\n  const isWithdrawAvailable = useMemo(() => {\n    if (!deposit) {\n      return false;\n    }\n\n    const available = parseInt(deposit?.available?.toString(), 10) ?? 0;\n\n    return Boolean(available > 0);\n  }, [deposit]);\n\n  const handleWithdrawRequest = useCallback(() => {\n    console.log('handleWithdrawRequest');\n  }, []);\n\n  return (\n    <Card className=\"overflow-hidden max-w-lg mx-auto w-full\">\n      <div className=\"flex flex-col space-y-6\">\n        <div className=\"pt-6 px-6 flex flex-row space-x-6 justify-between\">\n          <Heading level={3} className=\"uppercase\">\n            Deposit stats\n          </Heading>\n\n          {isConnected && depositsCount > 0 && (\n            <DepositNavigation\n              total={depositsCount}\n              current={currentDeposit}\n              onChange={setCurrentDeposit}\n            />\n          )}\n        </div>\n        {config.contractAddress && (\n          <Fragment>\n            <div className=\"flex flex-col space-y-4\">\n              {!isConnected && (\n                <div className=\"p-10 flex items-center justify-center min-h-[200px]\">\n                  <Spinner />\n                </div>\n              )}\n\n              {isConnected && depositsCount === 0 && (\n                <div className=\"text-center p-6\">\n                  <Heading level={4}>You have no deposits</Heading>\n                </div>\n              )}\n\n              {isConnected && deposit !== null && (\n                <Fragment>\n                  <div className=\"flex flex-col space-y-2 px-6\">\n                    <StatsRow\n                      label=\"Deposit start date\"\n                      value={new Date(deposit.createdAt).toLocaleString()}\n                    />\n                    <StatsRow\n                      label=\"My timezone\"\n                      value={Intl.DateTimeFormat().resolvedOptions().timeZone}\n                    />\n                    <StatsRow\n                      label=\"Deposited\"\n                      value={`${formatEther(deposit.deposited)} ${symbol}`}\n                    />\n                    <StatsRow\n                      label=\"Locked\"\n                      value={`${formatEther(deposit.locked)} ${symbol}`}\n                    />\n                    <StatsRow\n                      label=\"Unlocked\"\n                      value={`${formatEther(deposit.unlocked)} ${symbol}`}\n                    />\n                    <StatsRow\n                      label=\"Withdrawn\"\n                      value={`${formatEther(deposit.withdrawn)} ${symbol}`}\n                    />\n                    <StatsRow\n                      label=\"Available\"\n                      value={`${formatEther(deposit.available)} ${symbol}`}\n                    />\n                  </div>\n\n                  <div className=\"flex flex-col space-y-2 px-6 pb-6\">\n                    <Button\n                      fill\n                      disabled={!isWithdrawAvailable}\n                      onClick={handleWithdrawRequest}\n                    >\n                      Withdraw\n                    </Button>\n                  </div>\n                </Fragment>\n              )}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Card>\n  );\n}\n\nexport { DepositStatsWidget as default };\n","{\n  \"_format\": \"hh-sol-artifact-1\",\n  \"contractName\": \"HaqqVesting\",\n  \"sourceName\": \"contracts/HaqqVesting.sol\",\n  \"abi\": [\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"beneficiaryAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"depositId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"timestamp\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"sumInWeiDeposited\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"depositedBy\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"DepositMade\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint8\",\n          \"name\": \"version\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"name\": \"Initialized\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"beneficiary\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"sumInWei\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"triggeredByAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"WithdrawalMade\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"MAX_DEPOSITS\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"NUMBER_OF_PAYMENTS\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"TIME_BETWEEN_PAYMENTS\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_beneficiaryAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_depositId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"amountForOneWithdrawal\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_beneficiaryAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_depositId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"amountToWithdrawNow\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_beneficiaryAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"calculateAvailableSumForAllDeposits\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_beneficiaryAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"deposit\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"success\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"deposits\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"timestamp\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"sumInWeiDeposited\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"sumPaidAlready\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"depositsCounter\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_beneficiaryAddress\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"_depositId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"totalPayoutsUnblocked\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_newBeneficiaryAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"transferDepositRights\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_beneficiaryAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"withdraw\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"success\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ],\n  \"bytecode\": \"0x608060405234801561001057600080fd5b50611b0b806100206000396000f3fe6080604052600436106100a75760003560e01c8063ba766c9811610064578063ba766c9814610208578063d6d6817714610233578063de1b905214610272578063f340fa011461029d578063f8d7d41e146102cd578063fa83fb351461030a576100a7565b80631d004a31146100ac57806337bad3c0146100e95780633db35bf41461012657806351cff8d9146101635780638c860969146101a057806396a087f3146101dd575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190611446565b610333565b6040516100e09190611495565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b91906114b0565b61039d565b60405161011d9190611495565b60405180910390f35b34801561013257600080fd5b5061014d600480360381019061014891906114b0565b6103b5565b60405161015a9190611495565b60405180910390f35b34801561016f57600080fd5b5061018a600480360381019061018591906114b0565b610482565b60405161019791906114f8565b60405180910390f35b3480156101ac57600080fd5b506101c760048036038101906101c29190611446565b6107f2565b6040516101d49190611495565b60405180910390f35b3480156101e957600080fd5b506101f2610922565b6040516101ff9190611495565b60405180910390f35b34801561021457600080fd5b5061021d610927565b60405161022a9190611495565b60405180910390f35b34801561023f57600080fd5b5061025a60048036038101906102559190611446565b61092c565b60405161026993929190611513565b60405180910390f35b34801561027e57600080fd5b50610287610963565b6040516102949190611495565b60405180910390f35b6102b760048036038101906102b291906114b0565b610968565b6040516102c491906114f8565b60405180910390f35b3480156102d957600080fd5b506102f460048036038101906102ef9190611446565b610e00565b6040516103019190611495565b60405180910390f35b34801561031657600080fd5b50610331600480360381019061032c91906114b0565b610ef6565b005b60006014603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206001015461039591906115a8565b905092915050565b60336020528060005260406000206000915090505481565b6000806000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610479576000600190505b603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111610477576104578482610e00565b8261046291906115d9565b9150808061046f9061162f565b915050610407565b505b80915050919050565b6000600260015414156104ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c1906116d5565b60405180910390fd5b6002600181905550600080603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054c90611741565b60405180910390fd5b6000600190505b603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481116106885760006105ae8583610e00565b905080836105bc91906115d9565b925080603460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206002015461061d91906115d9565b603460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600201819055505080806106809061162f565b91505061055c565b50600081116106cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c3906117ad565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff16836040516106f3906117fe565b60006040518083038185875af1925050503d8060008114610730576040519150601f19603f3d011682016040523d82523d6000602084013e610735565b606091505b50915091508161077a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107719061185f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f565848cdb1369b8f0e5b0f6eb298a192163a96cf9f692903ec5f14cd2c0b7b65856040516107d79190611495565b60405180910390a36001935050505060018081905550919050565b600080603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000015411610889576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610880906118f1565b60405180910390fd5b6000603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000154426108ea9190611911565b9050600060016078836108fd91906115a8565b61090791906115d9565b9050601481111561091757601490505b809250505092915050565b601481565b607881565b6034602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154905083565b600a81565b6000600260015414156109b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a7906116d5565b60405180910390fd5b600260018190555060006001603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a0691906115d9565b9050600a811115610a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a43906119b7565b60405180910390fd5b6000601434610a5b91906115a8565b90506000808573ffffffffffffffffffffffffffffffffffffffff1683604051610a84906117fe565b60006040518083038185875af1925050503d8060008114610ac1576040519150601f19603f3d011682016040523d82523d6000602084013e610ac6565b606091505b509150915081610b0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b029061185f565b60405180910390fd5b83603360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082603460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060020154610bae91906115d9565b603460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206002018190555042603460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206000018190555034603460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060010181905550603460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060000154603360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548773ffffffffffffffffffffffffffffffffffffffff167f7a96fe6dfcc54565c447f8c7708e3eadc4fc71f36ae29781f6617d3da8551c4b603460008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008981526020019081526020016000206001015433604051610de49291906119e6565b60405180910390a4600194505050505060018081905550919050565b6000806000610e0f85856107f2565b90506014811415610e7557603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600101549150610e8d565b610e7f8585610333565b81610e8a9190611a0f565b91505b603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206002015482610eec9190611911565b9250505092915050565b6000603360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610f78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6f90611741565b60405180910390fd5b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610ffa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff190611ab5565b60405180910390fd5b6000600190505b603360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481116112e157603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828152602001908152602001600020603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015481600001556001820154816001015560028201548160020155905050604051806060016040528060008152602001600081526020016000815250603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020155905050603460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060000154603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548373ffffffffffffffffffffffffffffffffffffffff167f7a96fe6dfcc54565c447f8c7708e3eadc4fc71f36ae29781f6617d3da8551c4b603460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060010154336040516112c69291906119e6565b60405180910390a480806112d99061162f565b915050611001565b50603360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000603360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113dd826113b2565b9050919050565b6113ed816113d2565b81146113f857600080fd5b50565b60008135905061140a816113e4565b92915050565b6000819050919050565b61142381611410565b811461142e57600080fd5b50565b6000813590506114408161141a565b92915050565b6000806040838503121561145d5761145c6113ad565b5b600061146b858286016113fb565b925050602061147c85828601611431565b9150509250929050565b61148f81611410565b82525050565b60006020820190506114aa6000830184611486565b92915050565b6000602082840312156114c6576114c56113ad565b5b60006114d4848285016113fb565b91505092915050565b60008115159050919050565b6114f2816114dd565b82525050565b600060208201905061150d60008301846114e9565b92915050565b60006060820190506115286000830186611486565b6115356020830185611486565b6115426040830184611486565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115b382611410565b91506115be83611410565b9250826115ce576115cd61154a565b5b828204905092915050565b60006115e482611410565b91506115ef83611410565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561162457611623611579565b5b828201905092915050565b600061163a82611410565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561166d5761166c611579565b5b600182019050919050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006116bf601f83611678565b91506116ca82611689565b602082019050919050565b600060208201905081810360008301526116ee816116b2565b9050919050565b7f4e6f206465706f7369747320666f722074686973206164647265737300000000600082015250565b600061172b601c83611678565b9150611736826116f5565b602082019050919050565b6000602082019050818103600083015261175a8161171e565b9050919050565b7f53756d20746f2077697468647261772073686f756c64206265203e2030000000600082015250565b6000611797601d83611678565b91506117a282611761565b602082019050919050565b600060208201905081810360008301526117c68161178a565b9050919050565b600081905092915050565b50565b60006117e86000836117cd565b91506117f3826117d8565b600082019050919050565b6000611809826117db565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000611849601483611678565b915061185482611813565b602082019050919050565b600060208201905081810360008301526118788161183c565b9050919050565b7f4e6f206465706f7369742077697468207468697320494420666f72207468697360008201527f2061646472657373000000000000000000000000000000000000000000000000602082015250565b60006118db602883611678565b91506118e68261187f565b604082019050919050565b6000602082019050818103600083015261190a816118ce565b9050919050565b600061191c82611410565b915061192783611410565b92508282101561193a57611939611579565b5b828203905092915050565b7f4d6178206465706f736974206e756d62657220666f722074686973206164647260008201527f6573732072656163686564000000000000000000000000000000000000000000602082015250565b60006119a1602b83611678565b91506119ac82611945565b604082019050919050565b600060208201905081810360008301526119d081611994565b9050919050565b6119e0816113d2565b82525050565b60006040820190506119fb6000830185611486565b611a0860208301846119d7565b9392505050565b6000611a1a82611410565b9150611a2583611410565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a5e57611a5d611579565b5b828202905092915050565b7f4f6e6c7920656d707479206163636f756e7420697320616c6c6f776564000000600082015250565b6000611a9f601d83611678565b9150611aaa82611a69565b602082019050919050565b60006020820190508181036000830152611ace81611a92565b905091905056fea264697066735822122010f5d5b88c7c2e8cff9d50c8c6cce812a419c472649808257ecd0213937a699564736f6c634300080c0033\",\n  \"deployedBytecode\": \"0x6080604052600436106100a75760003560e01c8063ba766c9811610064578063ba766c9814610208578063d6d6817714610233578063de1b905214610272578063f340fa011461029d578063f8d7d41e146102cd578063fa83fb351461030a576100a7565b80631d004a31146100ac57806337bad3c0146100e95780633db35bf41461012657806351cff8d9146101635780638c860969146101a057806396a087f3146101dd575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190611446565b610333565b6040516100e09190611495565b60405180910390f35b3480156100f557600080fd5b50610110600480360381019061010b91906114b0565b61039d565b60405161011d9190611495565b60405180910390f35b34801561013257600080fd5b5061014d600480360381019061014891906114b0565b6103b5565b60405161015a9190611495565b60405180910390f35b34801561016f57600080fd5b5061018a600480360381019061018591906114b0565b610482565b60405161019791906114f8565b60405180910390f35b3480156101ac57600080fd5b506101c760048036038101906101c29190611446565b6107f2565b6040516101d49190611495565b60405180910390f35b3480156101e957600080fd5b506101f2610922565b6040516101ff9190611495565b60405180910390f35b34801561021457600080fd5b5061021d610927565b60405161022a9190611495565b60405180910390f35b34801561023f57600080fd5b5061025a60048036038101906102559190611446565b61092c565b60405161026993929190611513565b60405180910390f35b34801561027e57600080fd5b50610287610963565b6040516102949190611495565b60405180910390f35b6102b760048036038101906102b291906114b0565b610968565b6040516102c491906114f8565b60405180910390f35b3480156102d957600080fd5b506102f460048036038101906102ef9190611446565b610e00565b6040516103019190611495565b60405180910390f35b34801561031657600080fd5b50610331600480360381019061032c91906114b0565b610ef6565b005b60006014603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206001015461039591906115a8565b905092915050565b60336020528060005260406000206000915090505481565b6000806000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610479576000600190505b603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111610477576104578482610e00565b8261046291906115d9565b9150808061046f9061162f565b915050610407565b505b80915050919050565b6000600260015414156104ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c1906116d5565b60405180910390fd5b6002600181905550600080603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054c90611741565b60405180910390fd5b6000600190505b603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481116106885760006105ae8583610e00565b905080836105bc91906115d9565b925080603460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206002015461061d91906115d9565b603460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600201819055505080806106809061162f565b91505061055c565b50600081116106cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c3906117ad565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff16836040516106f3906117fe565b60006040518083038185875af1925050503d8060008114610730576040519150601f19603f3d011682016040523d82523d6000602084013e610735565b606091505b50915091508161077a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107719061185f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f565848cdb1369b8f0e5b0f6eb298a192163a96cf9f692903ec5f14cd2c0b7b65856040516107d79190611495565b60405180910390a36001935050505060018081905550919050565b600080603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000015411610889576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610880906118f1565b60405180910390fd5b6000603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000154426108ea9190611911565b9050600060016078836108fd91906115a8565b61090791906115d9565b9050601481111561091757601490505b809250505092915050565b601481565b607881565b6034602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154905083565b600a81565b6000600260015414156109b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a7906116d5565b60405180910390fd5b600260018190555060006001603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a0691906115d9565b9050600a811115610a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a43906119b7565b60405180910390fd5b6000601434610a5b91906115a8565b90506000808573ffffffffffffffffffffffffffffffffffffffff1683604051610a84906117fe565b60006040518083038185875af1925050503d8060008114610ac1576040519150601f19603f3d011682016040523d82523d6000602084013e610ac6565b606091505b509150915081610b0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b029061185f565b60405180910390fd5b83603360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082603460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060020154610bae91906115d9565b603460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206002018190555042603460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206000018190555034603460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060010181905550603460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060000154603360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548773ffffffffffffffffffffffffffffffffffffffff167f7a96fe6dfcc54565c447f8c7708e3eadc4fc71f36ae29781f6617d3da8551c4b603460008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008981526020019081526020016000206001015433604051610de49291906119e6565b60405180910390a4600194505050505060018081905550919050565b6000806000610e0f85856107f2565b90506014811415610e7557603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600101549150610e8d565b610e7f8585610333565b81610e8a9190611a0f565b91505b603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206002015482610eec9190611911565b9250505092915050565b6000603360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610f78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6f90611741565b60405180910390fd5b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610ffa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff190611ab5565b60405180910390fd5b6000600190505b603360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481116112e157603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828152602001908152602001600020603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015481600001556001820154816001015560028201548160020155905050604051806060016040528060008152602001600081526020016000815250603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020155905050603460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060000154603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548373ffffffffffffffffffffffffffffffffffffffff167f7a96fe6dfcc54565c447f8c7708e3eadc4fc71f36ae29781f6617d3da8551c4b603460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060010154336040516112c69291906119e6565b60405180910390a480806112d99061162f565b915050611001565b50603360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000603360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113dd826113b2565b9050919050565b6113ed816113d2565b81146113f857600080fd5b50565b60008135905061140a816113e4565b92915050565b6000819050919050565b61142381611410565b811461142e57600080fd5b50565b6000813590506114408161141a565b92915050565b6000806040838503121561145d5761145c6113ad565b5b600061146b858286016113fb565b925050602061147c85828601611431565b9150509250929050565b61148f81611410565b82525050565b60006020820190506114aa6000830184611486565b92915050565b6000602082840312156114c6576114c56113ad565b5b60006114d4848285016113fb565b91505092915050565b60008115159050919050565b6114f2816114dd565b82525050565b600060208201905061150d60008301846114e9565b92915050565b60006060820190506115286000830186611486565b6115356020830185611486565b6115426040830184611486565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115b382611410565b91506115be83611410565b9250826115ce576115cd61154a565b5b828204905092915050565b60006115e482611410565b91506115ef83611410565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561162457611623611579565b5b828201905092915050565b600061163a82611410565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561166d5761166c611579565b5b600182019050919050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006116bf601f83611678565b91506116ca82611689565b602082019050919050565b600060208201905081810360008301526116ee816116b2565b9050919050565b7f4e6f206465706f7369747320666f722074686973206164647265737300000000600082015250565b600061172b601c83611678565b9150611736826116f5565b602082019050919050565b6000602082019050818103600083015261175a8161171e565b9050919050565b7f53756d20746f2077697468647261772073686f756c64206265203e2030000000600082015250565b6000611797601d83611678565b91506117a282611761565b602082019050919050565b600060208201905081810360008301526117c68161178a565b9050919050565b600081905092915050565b50565b60006117e86000836117cd565b91506117f3826117d8565b600082019050919050565b6000611809826117db565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b6000611849601483611678565b915061185482611813565b602082019050919050565b600060208201905081810360008301526118788161183c565b9050919050565b7f4e6f206465706f7369742077697468207468697320494420666f72207468697360008201527f2061646472657373000000000000000000000000000000000000000000000000602082015250565b60006118db602883611678565b91506118e68261187f565b604082019050919050565b6000602082019050818103600083015261190a816118ce565b9050919050565b600061191c82611410565b915061192783611410565b92508282101561193a57611939611579565b5b828203905092915050565b7f4d6178206465706f736974206e756d62657220666f722074686973206164647260008201527f6573732072656163686564000000000000000000000000000000000000000000602082015250565b60006119a1602b83611678565b91506119ac82611945565b604082019050919050565b600060208201905081810360008301526119d081611994565b9050919050565b6119e0816113d2565b82525050565b60006040820190506119fb6000830185611486565b611a0860208301846119d7565b9392505050565b6000611a1a82611410565b9150611a2583611410565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a5e57611a5d611579565b5b828202905092915050565b7f4f6e6c7920656d707479206163636f756e7420697320616c6c6f776564000000600082015250565b6000611a9f601d83611678565b9150611aaa82611a69565b602082019050919050565b60006020820190508181036000830152611ace81611a92565b905091905056fea264697066735822122010f5d5b88c7c2e8cff9d50c8c6cce812a419c472649808257ecd0213937a699564736f6c634300080c0033\",\n  \"linkReferences\": {},\n  \"deployedLinkReferences\": {}\n}\n","import React, { ReactNode, SyntheticEvent } from 'react';\nimport clsx from 'clsx';\n\nexport interface ButtonProps {\n  children: ReactNode;\n  className?: string;\n  primary?: boolean;\n  outline?: boolean;\n  disabled?: boolean;\n  fill?: boolean;\n  type?: 'submit' | 'reset' | 'button';\n  onClick?: (event: SyntheticEvent<HTMLButtonElement, MouseEvent>) => void;\n}\n\nexport function Button({\n  children,\n  onClick,\n  outline = false,\n  disabled = false,\n  fill = false,\n  type = 'button',\n  className,\n}: ButtonProps) {\n  const classNames = clsx(\n    outline\n      ? 'bg-transparent text-primary border-[2px] box-border border-solid border-primary hover:text-[#20d775] hover:border-[#20d775]'\n      : 'bg-primary text-white hover:bg-[#20d775]',\n    'text-base font-semibold font-sans leading-[24px]',\n    'rounded-[8px] py-[8px] px-[22px] appearance-none',\n    'transition-colors duration-150 ease-linear',\n    fill ? 'w-full' : 'inline-block',\n    { 'opacity-75 cursor-not-allowed': disabled },\n    className,\n  );\n\n  return (\n    <button\n      type={type}\n      disabled={disabled}\n      onClick={onClick}\n      className={classNames}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport function DangerButton({\n  children,\n  onClick,\n  outline = false,\n  disabled = false,\n  fill = false,\n  type = 'button',\n  className,\n}: ButtonProps) {\n  const classNames = clsx(\n    outline\n      ? 'bg-transparent text-danger border-[2px] box-border border-solid border-danger hover:text-[#ff0000] hover:border-[#ff0000]'\n      : 'bg-danger text-white hover:bg-[#ff0000]',\n    'text-base font-semibold font-sans leading-[24px]',\n    'rounded-[8px] py-[8px] px-[22px] appearance-none',\n    'transition-colors duration-150 ease-linear',\n    fill ? 'w-full' : 'inline-block',\n    { 'opacity-75 cursor-not-allowed': disabled },\n    className,\n  );\n\n  return (\n    <button\n      type={type}\n      disabled={disabled}\n      onClick={onClick}\n      className={classNames}\n    >\n      {children}\n    </button>\n  );\n}\n","import clsx from 'clsx';\nimport React, { useCallback } from 'react';\nimport { Text } from './Typography';\n\ninterface DepositNavigation {\n  current: number;\n  total: number;\n  className?: string;\n  onChange: (nextPage: number) => void;\n}\n\nexport function DepositNavigation({\n  current,\n  total,\n  className,\n  onChange,\n}: DepositNavigation) {\n  const handlePrevClick = useCallback(() => {\n    onChange(current - 1);\n  }, [current, onChange]);\n  const handleNextClick = useCallback(() => {\n    onChange(current + 1);\n  }, [current, onChange]);\n\n  return (\n    <div\n      className={clsx('flex flex-row items-center justify-center', className)}\n    >\n      <button\n        onClick={handlePrevClick}\n        disabled={current <= 1}\n        className=\"h-6 w-6 hover:text-primary cursor-pointer p-1 disabled:cursor-not-allowed disabled:text-gray-300\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"w-full h-full\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          strokeWidth={3}\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M15 19l-7-7 7-7\"\n          />\n        </svg>\n      </button>\n      <div>\n        <Text color=\"light\" className=\"text-lg\">\n          <b>{current}</b> of {total}\n        </Text>\n      </div>\n      <button\n        onClick={handleNextClick}\n        disabled={current >= total}\n        className=\"h-6 w-6 hover:text-primary cursor-pointer p-1 disabled:cursor-not-allowed disabled:text-gray-300\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"w-full h-full\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          strokeWidth={3}\n        >\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 5l7 7-7 7\" />\n        </svg>\n      </button>\n    </div>\n  );\n}\n"],"names":["$g1qy9","parcelRequire","StatsRow","label","value","jsxs","className","jsx","$gNGZt","Text","bold","DepositStatsWidget","provider","useProvider","address","isConnected","isConnecting","useAccount","contract","useContract","addressOrName","config","contractAddress","contractInterface","HaqqVestingContract","abi","signerOrProvider","deposit","setDeposit","useState","depositsCount","setDepositsCount","currentDeposit","setCurrentDeposit","requestDepositCount","useCallback","async","depositsCounter","toNumber","error","console","requestDepStats","depositNumber","deposits","amount","amountToWithdrawNow","dep","available","deposited","sumInWeiDeposited","withdrawn","sumPaidAlready","unlocked","add","sub","createdAt","Date","timestamp","toISOString","mapSCResponseToJson","useEffect","isWithdrawAvailable","useMemo","parseInt","toString","Boolean","handleWithdrawRequest","log","$ePGuO","Card","Heading","level","$aOwuj","DepositNavigation","total","current","onChange","$h9ftg","Fragment","$kVHG9","Spinner","$c671f9b2d95ab3e0$var$StatsRow","toLocaleString","Intl","DateTimeFormat","resolvedOptions","timeZone","formatEther","locked","$1cmhB","Button","fill","disabled","onClick","module","JSON","parse","children","outline","type","classNames","clsx","handlePrevClick","handleNextClick","xmlns","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","color"],"version":3,"file":"DepositStatsWidget.bc340ff6.js.map"}